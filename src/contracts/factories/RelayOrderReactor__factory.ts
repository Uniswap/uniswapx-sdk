/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  RelayOrderReactor,
  RelayOrderReactorInterface,
} from "../RelayOrderReactor";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_universalRouter",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "PERMIT2",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IPermit2",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "execute",
    inputs: [
      {
        name: "signedOrder",
        type: "tuple",
        internalType: "struct SignedOrder",
        components: [
          {
            name: "order",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "sig",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "execute",
    inputs: [
      {
        name: "signedOrder",
        type: "tuple",
        internalType: "struct SignedOrder",
        components: [
          {
            name: "order",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "sig",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "feeRecipient",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "multicall",
    inputs: [
      {
        name: "data",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    outputs: [
      {
        name: "results",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "permit",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "contract ERC20",
      },
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "deadline",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "v",
        type: "uint8",
        internalType: "uint8",
      },
      {
        name: "r",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "s",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "universalRouter",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "Fill",
    inputs: [
      {
        name: "orderHash",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "filler",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "swapper",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "nonce",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "DeadlineBeforeEndTime",
    inputs: [],
  },
  {
    type: "error",
    name: "DeadlinePassed",
    inputs: [],
  },
  {
    type: "error",
    name: "EndTimeBeforeStartTime",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidAmounts",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidReactor",
    inputs: [],
  },
  {
    type: "error",
    name: "UnsafeCast",
    inputs: [],
  },
];

const _bytecode =
  "";

type RelayOrderReactorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RelayOrderReactorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RelayOrderReactor__factory extends ContractFactory {
  constructor(...args: RelayOrderReactorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _universalRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RelayOrderReactor> {
    return super.deploy(
      _universalRouter,
      overrides || {}
    ) as Promise<RelayOrderReactor>;
  }
  override getDeployTransaction(
    _universalRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_universalRouter, overrides || {});
  }
  override attach(address: string): RelayOrderReactor {
    return super.attach(address) as RelayOrderReactor;
  }
  override connect(signer: Signer): RelayOrderReactor__factory {
    return super.connect(signer) as RelayOrderReactor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RelayOrderReactorInterface {
    return new utils.Interface(_abi) as RelayOrderReactorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RelayOrderReactor {
    return new Contract(address, _abi, signerOrProvider) as RelayOrderReactor;
  }
}
