/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  RelayOrderReactor,
  RelayOrderReactorInterface,
} from "../RelayOrderReactor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IPermit2",
        name: "_permit2",
        type: "address",
      },
      {
        internalType: "address",
        name: "_universalRouter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DeadlineBeforeEndTime",
    type: "error",
  },
  {
    inputs: [],
    name: "DeadlinePassed",
    type: "error",
  },
  {
    inputs: [],
    name: "EndTimeBeforeStartTime",
    type: "error",
  },
  {
    inputs: [],
    name: "EndTimeBeforeStartTime",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmounts",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidReactor",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsafeCast",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "filler",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "swapper",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "Fill",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "order",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "sig",
            type: "bytes",
          },
        ],
        internalType: "struct SignedOrder",
        name: "signedOrder",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "feeRecipient",
        type: "address",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "permit2",
    outputs: [
      {
        internalType: "contract IPermit2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "universalRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c03461009257601f611a3038819003918201601f19168301916001600160401b038311848410176100975780849260409485528339810103126100925780516001600160a01b03918282168203610092576020015191821682036100925760805260a05260405161198290816100ae823960805181818161011b0152610703015260a05181818160af015261073a0152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b6000803560e01c90816312261ee7146100d657816335a9e4df14610065575080638229e25f14610060578063ac9650d81461005b5763e956bbdf1461005657600080fd5b610669565b6105e1565b610172565b346100d357807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100d357602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b80fd5b346100d357807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100d35773ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001660805260206080f35b600091031261014f57565b600080fd5b73ffffffffffffffffffffffffffffffffffffffff81160361014f57565b3461014f5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014f576004356101ad81610154565b60243567ffffffffffffffff80821161014f573660238301121561014f57816004013590811161014f57810136602482011161014f578160e091031261014f576024810135906101fc82610154565b60448101359161020b83610154565b606482013560848301359060a48401359260ff8416840361014f5760e460c4860135950135958773ffffffffffffffffffffffffffffffffffffffff808094169216926040516020918282017f3644e5150000000000000000000000000000000000000000000000000000000081526004835261028783610851565b836000958692839482169573c02aaa39b223fe8d0a0e5c4f27ead9083c756cc287036104d9575b505050506102cc575b505050156102c157005b6102ca9761151d565b005b919250907fdbb8cf42e1ecb028be3f3dbc922e1d878b963f411dc388ced501601c60f7c6f70361044e576040517f7ecebe0000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84166004820152908290829060249082905afa918215610449578661040a6000948594859161041c575b506040517f8fcbaf0c000000000000000000000000000000000000000000000000000000008582015273ffffffffffffffffffffffffffffffffffffffff80891660248301528916604482015260648101919091526084810192909252600160a483015260ff8a1660c483015260e482018b905261010482018c90528161012481015b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282610889565b905b81519101828c5af13880806102b7565b61043c9150843d8611610442575b6104348183610889565b810190610cef565b3861035b565b503d61042a565b610cfe565b506040517fd505accf000000000000000000000000000000000000000000000000000000008183015273ffffffffffffffffffffffffffffffffffffffff808416602483015284166044820152606481018590526084810186905260ff871660a482015260c4810188905260e4810189905260009182916104d38161010481016103de565b9061040c565b5192945090611388fa823d149351938415151616809390838d38806102ae565b60005b83811061050c5750506000910152565b81810151838201526020016104fc565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602093610558815180928187528780880191016104f9565b0116010190565b6020808201906020835283518092526040830192602060408460051b8301019501936000915b8483106105955750505050505090565b90919293949584806105d1837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc086600196030187528a5161051c565b9801930193019194939290610585565b3461014f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014f5767ffffffffffffffff60043581811161014f573660238201121561014f57806004013591821161014f573660248360051b8301011161014f576106659160246106599201610a54565b6040519182918261055f565b0390f35b3461014f577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60408136011261014f576004359067ffffffffffffffff821161014f5760408260040191833603011261014f576107296024356106cb81610154565b6107006106e36106db858061093a565b810190610c29565b936106ed85610d0a565b60246106f886610f0c565b96019061093a565b917f0000000000000000000000000000000000000000000000000000000000000000868661128e565b6000806060830151602081519101827f00000000000000000000000000000000000000000000000000000000000000005af16107636109f3565b90156107e557505190604061078f602084015173ffffffffffffffffffffffffffffffffffffffff1690565b920151907f78ad7ec0e9f89e74012afa58738b6b661c024cb0fd185ee2f616c0a28924bd6673ffffffffffffffffffffffffffffffffffffffff604051941693806107e03395829190602083019252565b0390a4005b602081519101fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6080810190811067ffffffffffffffff82111761083857604052565b6107ed565b67ffffffffffffffff811161083857604052565b6040810190811067ffffffffffffffff82111761083857604052565b6060810190811067ffffffffffffffff82111761083857604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761083857604052565b604051906108d78261086d565b565b604051906108d78261081c565b604051906108d782610851565b67ffffffffffffffff81116108385760051b60200190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121561014f570180359067ffffffffffffffff821161014f5760200191813603831361014f57565b908210156109a6576109a29160051b81019061093a565b9091565b61090b565b908092918237016000815290565b67ffffffffffffffff811161083857601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b3d15610a1e573d90610a04826109b9565b91610a126040519384610889565b82523d6000602084013e565b606090565b8051156109a65760200190565b8051600110156109a65760400190565b80518210156109a65760209160051b010190565b919091610a60836108f3565b906040610a706040519384610889565b8483527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0610a9d866108f3565b0160005b818110610b0d575050829460005b818110610abd575050505050565b600080610acb83858861098b565b90610ada8751809381936109ab565b0390305af4610ae76109f3565b90156107e55790600191610afb8288610a40565b52610b068187610a40565b5001610aaf565b806060602080938801015201610aa1565b919082606091031261014f576040516060810181811067ffffffffffffffff8211176108385760405260408082948035610b5781610154565b845260208101356020850152013591610b6f83610154565b0152565b91908260c091031261014f5760405160c0810181811067ffffffffffffffff8211176108385760405260a08082948035610bac81610154565b845260208101356020850152604081013560408501526060810135606085015260808101356080850152013591610b6f83610154565b81601f8201121561014f57803590610bf9826109b9565b92610c076040519485610889565b8284526020838301011161014f57816000926020809301838601378301015290565b9060208282031261014f57813567ffffffffffffffff9283821161014f570190818103926101c0841261014f57608060405194610c658661081c565b1261014f57604051610c768161081c565b8335610c8181610154565b81526020840135610c9181610154565b602082015260408401356040820152606084013560608201528452610cb98260808501610b1e565b6020850152610ccb8260e08501610b73565b60408501526101a083013590811161014f57610ce79201610be2565b606082015290565b9081602091031261014f575190565b6040513d6000823e3d90fd5b60608151015160806040830151015111610d6857515173ffffffffffffffffffffffffffffffffffffffff163003610d3e57565b60046040517f4ddf4a64000000000000000000000000000000000000000000000000000000008152fd5b60046040517f773a6187000000000000000000000000000000000000000000000000000000008152fd5b6040517f52656c61794f726465722800000000000000000000000000000000000000000060208201527f616464726573732072656163746f722c00000000000000000000000000000000602b8201527f6164647265737320737761707065722c00000000000000000000000000000000603b8201527f6164647265737320696e707574526563697069656e742c000000000000000000604b8201527f75696e74323536206665655374617274416d6f756e742c00000000000000000060628201527f75696e7432353620666565537461727454696d652c000000000000000000000060798201527f75696e7432353620666565456e6454696d652c00000000000000000000000000608e8201527f6164647265737320666565526563697069656e742c000000000000000000000060a18201527f627974657320616374696f6e732900000000000000000000000000000000000060b682015260a4815260e0810181811067ffffffffffffffff8211176108385760405290565b610f14610d92565b9061102b8251602080940120926103de835193610f5f8373ffffffffffffffffffffffffffffffffffffffff87511696015173ffffffffffffffffffffffffffffffffffffffff1690565b90610f856040858301510173ffffffffffffffffffffffffffffffffffffffff90511690565b604082015190858201516060830151916060610fbd60a0608087015196015173ffffffffffffffffffffffffffffffffffffffff1690565b950151888151910120956040519a8b998a019c8d9591610100979395919a99989461012088019b885273ffffffffffffffffffffffffffffffffffffffff80978180941660208b0152166040890152166060870152608086015260a085015260c08401521660e08201520152565b51902090565b6110ed6110fc6033611041610d92565b60405161104d8161086d565b602e815260208101907f546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c7582527f696e7432353620616d6f756e742900000000000000000000000000000000000060408201526040519586937f52656c61794f72646572207769746e657373290000000000000000000000000060208601526110de81518092602089890191016104f9565b840191518093868401906104f9565b01036013810184520182610889565b90565b90815180825260208080930193019160005b82811061111f575050505090565b909192938260408261115460019489516020809173ffffffffffffffffffffffffffffffffffffffff81511684520151910152565b01950193929101611111565b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0938186528686013760008582860101520116010190565b9593909796949160c087526101208701988051606060c08a01528051809b5261014089019a60208092019160005b82811061124c575050505061120d6110fc999a61123e969594936040848c60e0602061122c98015191015201516101008c01528a820360208c01526110ff565b73ffffffffffffffffffffffffffffffffffffffff9094166040890152565b6060870152858203608087015261051c565b9260a0818503910152611160565b9091929c8260408f9261128281600195516020809173ffffffffffffffffffffffffffffffffffffffff81511684520151910152565b019e01939291016111cd565b9190946040938451906112a08261086d565b6002825260005b8681106114085750602073ffffffffffffffffffffffffffffffffffffffff6113586113969383890151846112f0825173ffffffffffffffffffffffffffffffffffffffff1690565b91015161131a6112fe6108e6565b73ffffffffffffffffffffffffffffffffffffffff9093168352565b8582015261132787610a23565b5261133186610a23565b5061133e8a8a01516117e9565b61134787610a30565b5261135186610a30565b50886116f8565b95169580516060898201519101519061136f6108ca565b958652838601528885015251015173ffffffffffffffffffffffffffffffffffffffff1690565b9461139f611031565b92853b1561014f5760009788946113e493519a8b998a9889977ffe8ec1a70000000000000000000000000000000000000000000000000000000089526004890161119f565b03925af18015610449576113f55750565b806114026108d79261083d565b80610144565b6020906114136116df565b828286010152016112a7565b519065ffffffffffff8216820361014f57565b9081606091031261014f57805161144881610154565b916110fc604061145a6020850161141f565b930161141f565b92917fff00000000000000000000000000000000000000000000000000000000000000916040519460208601526040850152166060830152604182526108d78261081c565b60406110fc94936101009373ffffffffffffffffffffffffffffffffffffffff8091168452815181815116602086015281602082015116848601526060848201519165ffffffffffff80931682880152015116608085015260208201511660a0840152015160c08201528160e0820152019061051c565b6040517f927da10500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8381166004830152918216602482018190529184166044820152909791966e22d473030f116ddee9f6b43ac78ba39690959294909391906060826064818b5afa918215610449576000926116a7575b506115b19061179e565b6115b96108d9565b73ffffffffffffffffffffffffffffffffffffffff909a168a5273ffffffffffffffffffffffffffffffffffffffff1660208a015265ffffffffffff60408a015265ffffffffffff16606089015261160f6108ca565b97885273ffffffffffffffffffffffffffffffffffffffff166020880152604087015260f81b7fff00000000000000000000000000000000000000000000000000000000000000169061166192611461565b90803b1561014f576113e49360008094604051968795869485937f2b67b570000000000000000000000000000000000000000000000000000000008552600485016114a6565b6115b19192506116ce9060603d6060116116d8575b6116c68183610889565b810190611432565b91505091906115a7565b503d6116bc565b604051906116ec82610851565b60006020838281520152565b91906040906040519161170a8361086d565b6002835260005b8181106117875750509061177561178492604083966020810151602073ffffffffffffffffffffffffffffffffffffffff84830151169101516117556112fe6108e6565b602082015261176386610a23565b5261176d85610a23565b500151611826565b61177e82610a30565b52610a30565b50565b6020906117926116df565b82828701015201611711565b73ffffffffffffffffffffffffffffffffffffffff908181116117bf571690565b60046040517fc4bd89a9000000000000000000000000000000000000000000000000000000008152fd5b6117f16116df565b50604073ffffffffffffffffffffffffffffffffffffffff8251169101516040519161181c83610851565b8252602082015290565b9061182f6116df565b506020820151604083015160608401519060808501519281811160001461187a5760046040517fd856fc5a000000000000000000000000000000000000000000000000000000008152fd5b828410156118ac5760046040517f43133453000000000000000000000000000000000000000000000000000000008152fd5b6118da9360a09342821161191357505050935b015173ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff811661190b5750905b6119036112fe6108e6565b602082015290565b9050906118f8565b91929091908342831061192a5750505050936118bf565b8261193a94039242039103611941565b01936118bf565b817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04811182021583021561014f5702049056fea164736f6c6343000818000a";

type RelayOrderReactorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RelayOrderReactorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RelayOrderReactor__factory extends ContractFactory {
  constructor(...args: RelayOrderReactorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _permit2: PromiseOrValue<string>,
    _universalRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RelayOrderReactor> {
    return super.deploy(
      _permit2,
      _universalRouter,
      overrides || {}
    ) as Promise<RelayOrderReactor>;
  }
  override getDeployTransaction(
    _permit2: PromiseOrValue<string>,
    _universalRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _permit2,
      _universalRouter,
      overrides || {}
    );
  }
  override attach(address: string): RelayOrderReactor {
    return super.attach(address) as RelayOrderReactor;
  }
  override connect(signer: Signer): RelayOrderReactor__factory {
    return super.connect(signer) as RelayOrderReactor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RelayOrderReactorInterface {
    return new utils.Interface(_abi) as RelayOrderReactorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RelayOrderReactor {
    return new Contract(address, _abi, signerOrProvider) as RelayOrderReactor;
  }
}
