{"abi":[{"type":"fallback","stateMutability":"nonpayable"},{"type":"function","name":"success","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"error","name":"UniversalRouterError","inputs":[]}],"bytecode":{"object":"0x6080604052348015600f57600080fd5b5060928061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80630b93381b14605a575b6040517fca46dbc400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b00fea2646970667358221220db8893290454b9de2760f371219648582b1c610d1a37808f6a496d97d841d66464736f6c63430008180033","sourceMap":"131:172:80:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x6080604052348015600f57600080fd5b506004361060285760003560e01c80630b93381b14605a575b6040517fca46dbc400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b00fea2646970667358221220db8893290454b9de2760f371219648582b1c610d1a37808f6a496d97d841d66464736f6c63430008180033","sourceMap":"131:172:80:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;272:22;;;;;;;;;;;;;;201:28;","linkReferences":{}},"methodIdentifiers":{"success()":"0b93381b"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"UniversalRouterError\",\"type\":\"error\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"success\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A mock universal router that will always revert.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/foundry-tests/util/mock/MockUniversalRouter.sol\":\"MockUniversalRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":UniswapX/=lib/UniswapX/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/permit2/\",\":solmate/=lib/solmate/\"]},\"sources\":{\"test/foundry-tests/util/mock/MockUniversalRouter.sol\":{\"keccak256\":\"0xbcbb9e50408dc04265c958385c3579476d393802e1ce63c966da9f7f3502ce16\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://04099b1fda297b1d1a639a607ab9505d6322015ab7da19e42f93875a23d5354e\",\"dweb:/ipfs/QmT3gEkZEMJufspmSmsDnSjaHNnVXnAG2BtkTNhkj6aPXt\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"UniversalRouterError"},{"inputs":[],"stateMutability":"nonpayable","type":"fallback"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"success"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","UniswapX/=lib/UniswapX/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/","permit2/=lib/permit2/","solmate/=lib/solmate/"],"optimizer":{"enabled":true,"runs":1000000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"test/foundry-tests/util/mock/MockUniversalRouter.sol":"MockUniversalRouter"},"evmVersion":"paris","libraries":{}},"sources":{"test/foundry-tests/util/mock/MockUniversalRouter.sol":{"keccak256":"0xbcbb9e50408dc04265c958385c3579476d393802e1ce63c966da9f7f3502ce16","urls":["bzz-raw://04099b1fda297b1d1a639a607ab9505d6322015ab7da19e42f93875a23d5354e","dweb:/ipfs/QmT3gEkZEMJufspmSmsDnSjaHNnVXnAG2BtkTNhkj6aPXt"],"license":"GPL-2.0-or-later"}},"version":1},"ast":{"absolutePath":"test/foundry-tests/util/mock/MockUniversalRouter.sol","id":60241,"exportedSymbols":{"MockUniversalRouter":[60240]},"nodeType":"SourceUnit","src":"45:259:80","nodes":[{"id":60225,"nodeType":"PragmaDirective","src":"45:23:80","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":60240,"nodeType":"ContractDefinition","src":"131:172:80","nodes":[{"id":60228,"nodeType":"ErrorDefinition","src":"166:29:80","nodes":[],"errorSelector":"ca46dbc4","name":"UniversalRouterError","nameLocation":"172:20:80","parameters":{"id":60227,"nodeType":"ParameterList","parameters":[],"src":"192:2:80"}},{"id":60232,"nodeType":"FunctionDefinition","src":"201:28:80","nodes":[],"body":{"id":60231,"nodeType":"Block","src":"227:2:80","nodes":[],"statements":[]},"functionSelector":"0b93381b","implemented":true,"kind":"function","modifiers":[],"name":"success","nameLocation":"210:7:80","parameters":{"id":60229,"nodeType":"ParameterList","parameters":[],"src":"217:2:80"},"returnParameters":{"id":60230,"nodeType":"ParameterList","parameters":[],"src":"227:0:80"},"scope":60240,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":60239,"nodeType":"FunctionDefinition","src":"235:66:80","nodes":[],"body":{"id":60238,"nodeType":"Block","src":"255:46:80","nodes":[],"statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":60235,"name":"UniversalRouterError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60228,"src":"272:20:80","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":60236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"272:22:80","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":60237,"nodeType":"RevertStatement","src":"265:29:80"}]},"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":60233,"nodeType":"ParameterList","parameters":[],"src":"243:2:80"},"returnParameters":{"id":60234,"nodeType":"ParameterList","parameters":[],"src":"255:0:80"},"scope":60240,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"MockUniversalRouter","contractDependencies":[],"contractKind":"contract","documentation":{"id":60226,"nodeType":"StructuredDocumentation","src":"70:61:80","text":"@notice A mock universal router that will always revert."},"fullyImplemented":true,"linearizedBaseContracts":[60240],"name":"MockUniversalRouter","nameLocation":"140:19:80","scope":60241,"usedErrors":[60228],"usedEvents":[]}],"license":"GPL-2.0-or-later"},"id":80}