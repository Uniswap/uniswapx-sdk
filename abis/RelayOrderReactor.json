{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "_universalRouter",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "PERMIT2",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IPermit2"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "execute",
      "inputs": [
        {
          "name": "signedOrder",
          "type": "tuple",
          "internalType": "struct SignedOrder",
          "components": [
            {
              "name": "order",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sig",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "execute",
      "inputs": [
        {
          "name": "signedOrder",
          "type": "tuple",
          "internalType": "struct SignedOrder",
          "components": [
            {
              "name": "order",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "sig",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        },
        {
          "name": "feeRecipient",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "multicall",
      "inputs": [
        {
          "name": "data",
          "type": "bytes[]",
          "internalType": "bytes[]"
        }
      ],
      "outputs": [
        {
          "name": "results",
          "type": "bytes[]",
          "internalType": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "permit",
      "inputs": [
        {
          "name": "token",
          "type": "address",
          "internalType": "contract ERC20"
        },
        {
          "name": "owner",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "spender",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "deadline",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "v",
          "type": "uint8",
          "internalType": "uint8"
        },
        {
          "name": "r",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "s",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "universalRouter",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "Relay",
      "inputs": [
        {
          "name": "orderHash",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "filler",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "swapper",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "nonce",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "DeadlineBeforeEndTime",
      "inputs": []
    },
    {
      "type": "error",
      "name": "EndTimeBeforeStartTime",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidAmounts",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidReactor",
      "inputs": []
    },
    {
      "type": "error",
      "name": "UnsafeCast",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "810:1887:53:-:0;;;1265:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1313:34:53;;;810:1887;;14:290:73;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:73;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:73:o;:::-;810:1887:53;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "810:1887:53:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1218:40;;;;;;;;322:42:73;310:55;;;292:74;;280:2;265:18;1218:40:53;;;;;;;;2265:107;;;;;;:::i;:::-;;:::i;:::-;;1063:87;;1107:42;1063:87;;306:624:43;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2417:278:53:-;;;;;;:::i;:::-;;:::i;1399:821::-;;;;;;:::i;:::-;;:::i;2265:107::-;2333:32;2341:11;2354:10;2333:7;:32::i;:::-;2265:107;:::o;306:624:43:-;372:22;428:4;416:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;406:34;;455:9;450:474;470:15;;;450:474;;;503:12;;548:4;567;;572:1;567:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;540:35;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;502:73;;;;594:7;589:233;;782:6;776:13;769:4;761:6;757:17;750:40;589:233;848:6;835:7;843:1;835:10;;;;;;;;:::i;:::-;;;;;;;;;;:19;-1:-1:-1;;896:3:43;;450:474;;;;306:624;;;;:::o;2417:278:53:-;2632:56;:13;;;2646:5;2653:7;2662:6;2670:8;2680:1;2683;2686;2632:13;:56::i;:::-;2417:278;;;;;;;;:::o;1399:821::-;1490:23;1528:17;:11;;:17;:::i;:::-;1517:43;;;;;;;:::i;:::-;1489:71;;1570:16;:5;:14;:16::i;:::-;1597:17;1617:12;:5;:10;:12::i;:::-;1597:32;-1:-1:-1;1639:76:53;1597:32;1107:42;1685:12;1699:15;;;;:11;:15;:::i;:::-;1639:5;;:76;;;;:25;:76::i;:::-;1730:29;;;;:36;:40;1726:406;;1787:12;1801:19;1824:15;:20;;1845:5;:29;;;1824:51;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1786:89;;;;1894:7;1889:233;;2082:6;2076:13;2069:4;2061:6;2057:17;2050:40;1889:233;1772:360;;1726:406;2176:10;;:18;;;;;2196:16;;;;;2147:66;;10425:25:73;;;2147:66:53;;;2164:10;;2153:9;;2147:66;;10398:18:73;2147:66:53;;;;;;;1479:741;;1399:821;;:::o;3785:2881:34:-;4100:55;;;;;;;;;;;;;;;;;;;4123:31;4100:55;;;4075:22;;4620:42;4609:54;;4665:13;4606:73;4596:1102;;5554:2;5551:1;5539:9;5533:16;5528:2;5517:9;5513:18;5506:5;5500:4;5489:68;4902:2;4884:16;4881:24;4875:1;4869:8;4862:16;4855:24;4851:55;4730:849;4699:880;;5622:1;5616:8;5597:27;;4596:1102;5807:7;5803:591;;;796:66;6005:39;;:247;;6179:73;;10782:42:73;10851:15;;;6179:73:34;;;10833:34:73;10903:15;;10883:18;;;10876:43;10935:18;;;10928:34;;;10978:18;;;10971:34;;;11054:4;11042:17;;11021:19;;;11014:46;11076:19;;;11069:35;;;11120:19;;;11113:35;;;10744:19;;6179:73:34;;;;;;;;;;;;;;;;;;;;;;;;6005:247;;;6114:19;;;;;:12;310:55:73;;;6114:19:34;;;292:74:73;6098:5:34;;6105:7;;6114:12;;;;;265:18:73;;6114:19:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6063:97;;11691:42:73;11760:15;;;6063:97:34;;;11742:34:73;11812:15;;;;11792:18;;;11785:43;11844:18;;;11837:34;11887:18;;;11880:34;;;6145:4:34;11930:19:73;;;11923:51;12023:4;12011:17;;11990:19;;;11983:46;12045:19;;;12038:35;;;12089:19;;;12082:35;;;11653:19;;6063:97:34;;;;;;;;;;;;;;;;;;;;;;;;6005:247;5993:259;;6368:1;6365;6353:9;6347:16;6342:2;6331:9;6327:18;6324:1;6317:5;6310;6305:65;6294:76;;5803:591;6409:7;6404:256;;6586:63;6600:5;6607;6614:7;6623:6;6631:8;6641:1;6644;6647;6586:13;:63::i;:::-;3991:2675;;;3785:2881;;;;;;;;:::o;2315:309:52:-;2408:9;;;;:17;;;2386:10;;:19;;;:39;2382:114;;;2448:37;;;;;;;;;;;;;;2382:114;2535:10;;:18;2510:44;;2518:4;2510:44;2506:112;;2577:30;;;;;;;;;;;;;;4825:358;1640:140;;;12746:13:73;1640:140:52;;;12734:26:73;12790:22;12776:12;;;12769:44;12843:14;12829:12;;;12822:36;12888:19;12874:12;;;12867:41;12938:32;12924:12;;;12917:54;1640:140:52;;;;;;;;;12987:12:73;;;1640:140:52;;13729:15:73;580:193:49;;;13717:28:73;13775:16;13761:12;;;13754:38;;;13822:22;13808:12;;;13801:44;13875:20;13861:12;;;13854:42;13926:20;13912:12;;;13905:42;13977:18;13963:12;;;13956:40;580:193:49;;;;;;;;;14012:12:73;;;580:193:49;;14552:8:73;265:85:50;;;14540:21:73;14577:11;;;14570:37;;;;14637:17;14623:12;;;14616:39;14685:20;14671:12;;;14664:42;265:85:50;;;;;;;;;14722:12:73;;;265:85:50;;15363:17:73;295:128:51;;;15351:30:73;15411:18;15397:12;;;15390:40;15460:18;15446:12;;;15439:40;15509:16;15495:12;;;15488:38;15556:19;15542:12;;;15535:41;295:128:51;;;;;;;;;15592:12:73;;;295:128:51;;;-1:-1:-1;;1953:217:52;;;;;:::i;:::-;;;;;;;;;;;;;2231:38;;;;;;5007:17;:5;:10;;;:15;:17::i;:::-;5042:18;:5;:11;;;:16;:18::i;:::-;5078:16;:5;:9;;;:14;:16::i;:::-;5122:29;;;;5112:40;;;;;;;4936:230;;;;;;;;;16781:25:73;;;16837:2;16822:18;;16815:34;;;;16880:2;16865:18;;16858:34;;;;16923:2;16908:18;;16901:34;16966:3;16951:19;;16944:35;16768:3;16753:19;;16522:463;4936:230:52;;;;;;;;;;;;;4913:263;;;;;;4906:270;;4825:358;;;:::o;3911:793::-;4109:56;4168:26;:5;:24;:26::i;:::-;4109:85;-1:-1:-1;4204:60:52;4267:37;:5;4291:12;4267:23;:37::i;:::-;4204:100;;4315:7;:33;;;4362:186;;;;;;;;4434:11;4362:186;;;;4470:5;:10;;;:16;;;4362:186;;;;4514:5;:10;;;:19;;;4362:186;;;4562:7;4583:5;:10;;;:18;;;4615:9;580:193:49;;;;;;13729:15:73;13717:28;;13775:16;13770:2;13761:12;;13754:38;13822:22;13817:2;13808:12;;13801:44;13875:20;13870:2;13861:12;;13854:42;13926:20;13921:2;13912:12;;13905:42;13977:18;13972:2;13963:12;;13956:40;14021:2;14012:12;;13010:1020;580:193:49;;;;;;;;;;;;;;14552:8:73;580:193:49;265:85:50;;14540:21:73;14590:16;14577:11;;;14570:37;14637:17;14623:12;;;14616:39;14685:20;14671:12;;;14664:42;265:85:50;;;;;;;;;14722:12:73;;;265:85:50;;12746:13:73;1640:140:52;;;12734:26:73;12790:22;12776:12;;;12769:44;12843:14;12829:12;;;12822:36;12888:19;12874:12;;;12867:41;12938:32;12924:12;;;12917:54;1640:140:52;;;;;;;;;12987:12:73;;;1640:140:52;;15363:17:73;295:128:51;;;15351:30:73;15411:18;15397:12;;;15390:40;15460:18;15446:12;;;15439:40;15509:16;15495:12;;;15488:38;15556:19;15542:12;;;15535:41;295:128:51;;;;;;;;;1519:40:52;;;;;;;15592:12:73;;;1519:40:52;;;580:193:49;;265:85:50;;1640:140:52;;295:128:51;;1519:40:52;;;;;1243:326;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4684:3;;4315:382;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4099:605;;3911:793;;;;;;:::o;7309:919:34:-;7551:49;;;;;21259:42:73;21328:15;;;7551:49:34;;;21310:34:73;21380:15;;;21360:18;;;21353:43;21432:15;;21412:18;;;21405:43;7535:12:34;;1228:42;;7551:17;;21222:18:73;;7551:49:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7531:69;;;;1228:42;7611:14;;;7639:5;7658:510;;;;;;;;7717:363;;;;;;;;7787:5;7717:363;;;;;;7823:18;:6;:16;:18::i;:::-;7717:363;;;;;;8011:16;7717:363;;;;;;;;;;;;;;;7658:510;;;;;;;;;;;;;;;8182:29;;;;;22247:19:73;;;22282:12;;;22275:28;;;22345:66;8201:9:34;;;;22333:79:73;22319:12;;;22312:101;22429:12;;8182:29:34;;;;;;;;;;;;7611:610;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7521:707;7309:919;;;;;;;;:::o;645:278:51:-;295:128;;15363:17:73;295:128:51;;;15351:30:73;15411:18;15397:12;;;15390:40;15460:18;15446:12;;;15439:40;15509:16;15495:12;;;15488:38;15556:19;15542:12;;;15535:41;715:7:51;;15592:12:73;;295:128:51;;;;;;;;;;;;;484:38;;295:128;484:38;;;;819:17;;838;;;;857:15;;;;874:18;;;;;764:142;;;23670:25:73;;;;23714:42;23792:15;;;23772:18;;;23765:43;;;;23844:15;23824:18;;;23817:43;23876:18;;;23869:34;;;;23919:19;;;23912:35;23642:19;;764:142:51;23411:542:73;543:171:50;265:85;;14552:8:73;265:85:50;;;14540:21:73;14590:16;14577:11;;;14570:37;14637:17;14623:12;;;14616:39;14685:20;14671:12;;;14664:42;600:7:50;;14722:12:73;;265:85:50;;;;;;;;;;;;;399:27;;265:85;399:27;;;;663:11;;676:12;;;;690:15;;;;636:70;;;24189:25:73;;;;24233:42;24311:15;;;24291:18;;;24284:43;;;;24343:18;;;24336:34;24406:15;24386:18;;;24379:43;24161:19;;636:70:50;23958:470:73;3525:233:49;580:193;;13729:15:73;580:193:49;;;13717:28:73;13775:16;13761:12;;;13754:38;13822:22;13808:12;;;13801:44;13875:20;13861:12;;;13854:42;13926:20;13912:12;;;13905:42;13977:18;13963:12;;;13956:40;3587:7:49;;14012:12:73;;580:193:49;;;;;;;;;;;;;831:35;;580:193;831:35;;;;3671:9;;3682:15;;;;3699:13;;;;3714;;;;;3729:11;;;;;3636:105;;;24720:25:73;;;;24793:42;24781:55;;;24761:18;;;24754:83;;;;24853:18;;;24846:34;24896:18;;;24889:34;;;;24939:19;;;24932:35;;;;24983:19;;;24976:35;24692:19;;3636:105:49;24433:584:73;2696:412:52;2882:44;;;2924:1;2882:44;;;2796:56;2882:44;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;2882:44:52;;;;;;;;;;;;;;;2868:58;;2953:91;;;;;;;;2997:5;:11;;;:17;;;2953:91;;;;;;3024:5;:11;;;:18;;;2953:91;;;2936:11;2948:1;2936:14;;;;;;;;:::i;:::-;;;;;;:108;;;;3071:30;:5;:9;;;-1:-1:-1;;;;;;;;;;;;;;;;;;2525:78:49;;;;;;;;2569:9;;2525:78;;;;2588:13;;;2525:78;;;;;2343:267;3071:30:52;3054:11;3066:1;3054:14;;;;;;;;:::i;:::-;;;;;;:47;;;;2696:412;;;:::o;3251:496::-;3458:52;;;3508:1;3458:52;;;3372:60;3458:52;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;3458:52:52;;;;;;;;;;;;;;;3448:62;;3533:143;;;;;;;;3595:5;:11;;;:21;;;3533:143;;;;;;3647:5;:11;;;:18;;;3533:143;;;3520:7;3528:1;3520:10;;;;;;;;:::i;:::-;;;;;;;;;;:156;3699:9;;;;:41;;3727:12;3699:27;:41::i;:::-;3686:7;3694:1;3686:10;;;;;;;;:::i;:::-;;;;;;:54;;;;3251:496;;;;:::o;288:164:36:-;345:7;376:17;368:25;;364:50;;;402:12;;;;;;;;;;;;;;364:50;-1:-1:-1;439:5:36;288:164::o;2920:497:49:-;-1:-1:-1;;;;;;;;;;;;;;;;;3203:22:49;3228:67;3236:3;:15;;;3253:3;:13;;;3268:3;:13;;;3283:3;:11;;;3228:7;:67::i;:::-;3314:96;;;;;;;;;;;;;;;;;;;-1:-1:-1;3314:96:49;;2920:497;-1:-1:-1;;2920:497:49:o;1280:836::-;1420:22;1476:9;1462:11;:23;1458:652;;;1508:30;;;;;;;;;;;;;;1458:652;1569:9;1559:7;:19;1555:555;;;1601:38;;;;;;;;;;;;;;1555:555;1671:15;1660:7;:26;1656:454;;-1:-1:-1;1719:9:49;1656:454;;;1762:15;1749:9;:28;1745:365;;-1:-1:-1;1810:11:49;1745:365;;;1898:15;:27;;;1962:19;;;2030:55;2031:23;;;1898:27;1962:19;2030:36;:55::i;:::-;2016:11;:69;1999:86;;1852:248;;1745:365;1280:836;;;;;;:::o;1564:526:40:-;1680:9;1928:1;1915:11;1911:19;1908:1;1905:26;1902:1;1898:34;1891:42;1878:11;1874:60;1864:116;;1964:1;1961;1954:12;1864:116;-1:-1:-1;2051:9:40;;2047:27;;1564:526::o;377:159:73:-;441:5;486:2;477:6;472:3;468:16;464:25;461:45;;;502:1;499;492:12;461:45;-1:-1:-1;524:6:73;377:159;-1:-1:-1;377:159:73:o;541:365::-;632:6;685:2;673:9;664:7;660:23;656:32;653:52;;;701:1;698;691:12;653:52;741:9;728:23;774:18;766:6;763:30;760:50;;;806:1;803;796:12;760:50;829:71;892:7;883:6;872:9;868:22;829:71;:::i;1160:626::-;1257:6;1265;1318:2;1306:9;1297:7;1293:23;1289:32;1286:52;;;1334:1;1331;1324:12;1286:52;1374:9;1361:23;1403:18;1444:2;1436:6;1433:14;1430:34;;;1460:1;1457;1450:12;1430:34;1498:6;1487:9;1483:22;1473:32;;1543:7;1536:4;1532:2;1528:13;1524:27;1514:55;;1565:1;1562;1555:12;1514:55;1605:2;1592:16;1631:2;1623:6;1620:14;1617:34;;;1647:1;1644;1637:12;1617:34;1700:7;1695:2;1685:6;1682:1;1678:14;1674:2;1670:23;1666:32;1663:45;1660:65;;;1721:1;1718;1711:12;1660:65;1752:2;1744:11;;;;;1774:6;;-1:-1:-1;1160:626:73;;-1:-1:-1;;;;1160:626:73:o;1791:250::-;1876:1;1886:113;1900:6;1897:1;1894:13;1886:113;;;1976:11;;;1970:18;1957:11;;;1950:39;1922:2;1915:10;1886:113;;;-1:-1:-1;;2033:1:73;2015:16;;2008:27;1791:250::o;2046:329::-;2087:3;2125:5;2119:12;2152:6;2147:3;2140:19;2168:76;2237:6;2230:4;2225:3;2221:14;2214:4;2207:5;2203:16;2168:76;:::i;:::-;2289:2;2277:15;2294:66;2273:88;2264:98;;;;2364:4;2260:109;;2046:329;-1:-1:-1;;2046:329:73:o;2380:859::-;2540:4;2569:2;2609;2598:9;2594:18;2639:2;2628:9;2621:21;2662:6;2697;2691:13;2728:6;2720;2713:22;2766:2;2755:9;2751:18;2744:25;;2828:2;2818:6;2815:1;2811:14;2800:9;2796:30;2792:39;2778:53;;2866:2;2858:6;2854:15;2887:1;2897:313;2911:6;2908:1;2905:13;2897:313;;;3000:66;2988:9;2980:6;2976:22;2972:95;2967:3;2960:108;3091:39;3123:6;3114;3108:13;3091:39;:::i;:::-;3081:49;-1:-1:-1;3188:12:73;;;;3153:15;;;;2933:1;2926:9;2897:313;;;-1:-1:-1;3227:6:73;;2380:859;-1:-1:-1;;;;;;;2380:859:73:o;3244:161::-;3337:42;3330:5;3326:54;3319:5;3316:65;3306:93;;3395:1;3392;3385:12;3410:1007;3545:6;3553;3561;3569;3577;3585;3593;3601;3654:3;3642:9;3633:7;3629:23;3625:33;3622:53;;;3671:1;3668;3661:12;3622:53;3710:9;3697:23;3729:38;3761:5;3729:38;:::i;:::-;3786:5;-1:-1:-1;3843:2:73;3828:18;;3815:32;3856:40;3815:32;3856:40;:::i;:::-;3915:7;-1:-1:-1;3974:2:73;3959:18;;3946:32;3987:40;3946:32;3987:40;:::i;:::-;4046:7;-1:-1:-1;4100:2:73;4085:18;;4072:32;;-1:-1:-1;4151:3:73;4136:19;;4123:33;;-1:-1:-1;4208:3:73;4193:19;;4180:33;4257:4;4244:18;;4232:31;;4222:59;;4277:1;4274;4267:12;4222:59;3410:1007;;;;-1:-1:-1;3410:1007:73;;;;;;4300:7;;-1:-1:-1;;;4354:3:73;4339:19;;4326:33;;4406:3;4391:19;4378:33;;3410:1007::o;4422:507::-;4522:6;4530;4583:2;4571:9;4562:7;4558:23;4554:32;4551:52;;;4599:1;4596;4589:12;4551:52;4639:9;4626:23;4672:18;4664:6;4661:30;4658:50;;;4704:1;4701;4694:12;4658:50;4727:71;4790:7;4781:6;4770:9;4766:22;4727:71;:::i;:::-;4717:81;;;4848:2;4837:9;4833:18;4820:32;4861:38;4893:5;4861:38;:::i;:::-;4918:5;4908:15;;;4422:507;;;;;:::o;4934:184::-;4986:77;4983:1;4976:88;5083:4;5080:1;5073:15;5107:4;5104:1;5097:15;5123:184;5175:77;5172:1;5165:88;5272:4;5269:1;5262:15;5296:4;5293:1;5286:15;5312:580;5389:4;5395:6;5455:11;5442:25;5545:66;5534:8;5518:14;5514:29;5510:102;5490:18;5486:127;5476:155;;5627:1;5624;5617:12;5476:155;5654:33;;5706:20;;;-1:-1:-1;5749:18:73;5738:30;;5735:50;;;5781:1;5778;5771:12;5735:50;5814:4;5802:17;;-1:-1:-1;5845:14:73;5841:27;;;5831:38;;5828:58;;;5882:1;5879;5872:12;5828:58;5312:580;;;;;:::o;5897:271::-;6080:6;6072;6067:3;6054:33;6036:3;6106:16;;6131:13;;;6106:16;5897:271;-1:-1:-1;5897:271:73:o;6173:248::-;6240:2;6234:9;6282:4;6270:17;;6317:18;6302:34;;6338:22;;;6299:62;6296:88;;;6364:18;;:::i;:::-;6400:2;6393:22;6173:248;:::o;6426:696::-;6478:5;6526:4;6514:9;6509:3;6505:19;6501:30;6498:50;;;6544:1;6541;6534:12;6498:50;6577:2;6571:9;6619:4;6611:6;6607:17;6690:6;6678:10;6675:22;6654:18;6642:10;6639:34;6636:62;6633:88;;;6701:18;;:::i;:::-;6737:2;6730:22;6770:6;-1:-1:-1;6770:6:73;6800:23;;6832:40;6800:23;6832:40;:::i;:::-;6881:23;;6965:2;6950:18;;;6937:32;6920:15;;;6913:57;7022:2;7007:18;;6994:32;7035:40;6994:32;7035:40;:::i;:::-;7103:2;7091:15;;;;7084:32;6426:696;;-1:-1:-1;;6426:696:73:o;7127:757::-;7186:5;7234:4;7222:9;7217:3;7213:19;7209:30;7206:50;;;7252:1;7249;7242:12;7206:50;7285:2;7279:9;7327:4;7319:6;7315:17;7398:6;7386:10;7383:22;7362:18;7350:10;7347:34;7344:62;7341:88;;;7409:18;;:::i;:::-;7445:2;7438:22;7478:6;-1:-1:-1;7478:6:73;7508:23;;7540:40;7508:23;7540:40;:::i;:::-;7604:7;7596:6;7589:23;;7673:2;7662:9;7658:18;7645:32;7640:2;7632:6;7628:15;7621:57;7739:2;7728:9;7724:18;7711:32;7706:2;7698:6;7694:15;7687:57;7805:2;7794:9;7790:18;7777:32;7772:2;7764:6;7760:15;7753:57;7872:3;7861:9;7857:19;7844:33;7838:3;7830:6;7826:16;7819:59;;7127:757;;;;:::o;7889:777::-;7931:5;7984:3;7977:4;7969:6;7965:17;7961:27;7951:55;;8002:1;7999;7992:12;7951:55;8038:6;8025:20;8064:18;8101:2;8097;8094:10;8091:36;;;8107:18;;:::i;:::-;8241:2;8235:9;8303:4;8295:13;;8146:66;8291:22;;;8315:2;8287:31;8283:40;8271:53;;;8339:18;;;8359:22;;;8336:46;8333:72;;;8385:18;;:::i;:::-;8425:10;8421:2;8414:22;8460:2;8452:6;8445:18;8506:3;8499:4;8494:2;8486:6;8482:15;8478:26;8475:35;8472:55;;;8523:1;8520;8513:12;8472:55;8587:2;8580:4;8572:6;8568:17;8561:4;8553:6;8549:17;8536:54;8634:1;8627:4;8622:2;8614:6;8610:15;8606:26;8599:37;8654:6;8645:15;;;;;;7889:777;;;;:::o;8671:1311::-;8759:6;8812:2;8800:9;8791:7;8787:23;8783:32;8780:52;;;8828:1;8825;8818:12;8780:52;8868:9;8855:23;8897:18;8938:2;8930:6;8927:14;8924:34;;;8954:1;8951;8944:12;8924:34;8977:22;;;;9018:16;;;9054:6;9046:15;;9043:35;;;9074:1;9071;9064:12;9043:35;9100:17;;:::i;:::-;9137:4;9133:2;9129:13;9126:33;;;9155:1;9152;9145:12;9126:33;9183:17;;:::i;:::-;9168:32;;9237:2;9224:16;9249:40;9281:7;9249:40;:::i;:::-;9298:24;;9367:2;9359:11;;9346:25;9380:40;9346:25;9380:40;:::i;:::-;9454:7;9449:2;9440:7;9436:16;9429:33;;9517:2;9513;9509:11;9496:25;9491:2;9482:7;9478:16;9471:51;9577:2;9573;9569:11;9556:25;9551:2;9542:7;9538:16;9531:51;9605:7;9598:5;9591:22;9645:47;9684:7;9677:4;9673:2;9669:13;9645:47;:::i;:::-;9640:2;9633:5;9629:14;9622:71;9725:53;9770:7;9764:3;9760:2;9756:12;9725:53;:::i;:::-;9720:2;9713:5;9709:14;9702:77;9825:3;9821:2;9817:12;9804:26;9788:42;;9855:2;9845:8;9842:16;9839:36;;;9871:1;9868;9861:12;9839:36;9907:44;9943:7;9932:8;9928:2;9924:17;9907:44;:::i;:::-;9902:2;9891:14;;9884:68;9895:5;8671:1311;-1:-1:-1;;;;;;8671:1311:73:o;9987:287::-;10116:3;10154:6;10148:13;10170:66;10229:6;10224:3;10217:4;10209:6;10205:17;10170:66;:::i;:::-;10252:16;;;;;9987:287;-1:-1:-1;;9987:287:73:o;11159:184::-;11229:6;11282:2;11270:9;11261:7;11257:23;11253:32;11250:52;;;11298:1;11295;11288:12;11250:52;-1:-1:-1;11321:16:73;;11159:184;-1:-1:-1;11159:184:73:o;15615:902::-;15882:3;15920:6;15914:13;15936:66;15995:6;15990:3;15983:4;15975:6;15971:17;15936:66;:::i;:::-;16065:13;;16024:16;;;;16087:70;16065:13;16024:16;16134:4;16122:17;;16087:70;:::i;:::-;16224:13;;16179:20;;;16246:70;16224:13;16179:20;16293:4;16281:17;;16246:70;:::i;:::-;16383:13;;16338:20;;;16405:70;16383:13;16338:20;16452:4;16440:17;;16405:70;:::i;:::-;16491:20;;15615:902;-1:-1:-1;;;;;;15615:902:73:o;16990:1292::-;17436:21;17431:3;17424:34;17406:3;17477:2;17508:6;17502:13;17524:75;17592:6;17587:2;17582:3;17578:12;17571:4;17563:6;17559:17;17524:75;:::i;:::-;17659:13;;17618:16;;;;17681:76;17659:13;17735:11;;;17728:4;17716:17;;17681:76;:::i;:::-;17818:13;;17776:17;;;17840:76;17818:13;17894:11;;;17887:4;17875:17;;17840:76;:::i;:::-;17977:13;;17935:17;;;17999:76;17977:13;18053:11;;;18046:4;18034:17;;17999:76;:::i;:::-;18136:13;;18094:17;;;18158:76;18136:13;18212:11;;;18205:4;18193:17;;18158:76;:::i;:::-;18254:17;18250:26;;16990:1292;-1:-1:-1;;;;;;;16990:1292:73:o;18498:493::-;18575:3;18613:5;18607:12;18640:6;18635:3;18628:19;18666:4;18695;18690:3;18686:14;18679:21;;18734:4;18727:5;18723:16;18757:1;18767:199;18781:6;18778:1;18775:13;18767:199;;;18830:54;18880:3;18871:6;18865:13;18373:12;;18387:42;18369:61;18357:74;;18480:4;18469:16;;;18463:23;18447:14;;18440:47;18287:206;18830:54;18913:4;18904:14;;;;;18941:15;;;;18803:1;18796:9;18767:199;;;-1:-1:-1;18982:3:73;;18498:493;-1:-1:-1;;;;;18498:493:73:o;18996:325::-;19084:6;19079:3;19072:19;19136:6;19129:5;19122:4;19117:3;19113:14;19100:43;;19188:1;19181:4;19172:6;19167:3;19163:16;19159:27;19152:38;19054:3;19310:4;19240:66;19235:2;19227:6;19223:15;19219:88;19214:3;19210:98;19206:109;19199:116;;18996:325;;;;:::o;19326:1716::-;19863:3;19852:9;19845:22;19826:4;19905:3;19894:9;19890:19;19944:6;19938:13;19988:4;19982:3;19971:9;19967:19;19960:33;20013:6;20048:12;20042:19;20085:6;20077;20070:22;20123:3;20112:9;20108:19;20101:26;;20146:4;20136:14;;20191:4;20177:12;20173:23;20159:37;;20214:1;20224:199;20238:6;20235:1;20232:13;20224:199;;;20287:54;20337:3;20328:6;20322:13;18373:12;;18387:42;18369:61;18357:74;;18480:4;18469:16;;;18463:23;18447:14;;18440:47;18287:206;20287:54;20398:15;;;;20370:4;20361:14;;;;;20260:1;20253:9;20224:199;;;20228:3;;20478:4;20470:6;20466:17;20460:24;20454:3;20443:9;20439:19;20432:53;20540:4;20532:6;20528:17;20522:24;20516:3;20505:9;20501:19;20494:53;20594:9;20589:3;20585:19;20578:4;20567:9;20563:20;20556:49;20628:65;20689:3;20681:6;20628:65;:::i;:::-;20614:79;;;;20702:48;20744:4;20733:9;20729:20;20721:6;91:42;80:54;68:67;;14:127;20702:48;20788:6;20781:4;20770:9;20766:20;20759:36;20844:9;20836:6;20832:22;20826:3;20815:9;20811:19;20804:51;20878:32;20903:6;20895;20878:32;:::i;:::-;20864:46;;20959:9;20951:6;20947:22;20941:3;20930:9;20926:19;20919:51;20987:49;21029:6;21021;21013;20987:49;:::i;:::-;20979:57;19326:1716;-1:-1:-1;;;;;;;;;;19326:1716:73:o;21459:171::-;21537:13;;21590:14;21579:26;;21569:37;;21559:65;;21620:1;21617;21610:12;21559:65;21459:171;;;:::o;21635:424::-;21721:6;21729;21737;21790:2;21778:9;21769:7;21765:23;21761:32;21758:52;;;21806:1;21803;21796:12;21758:52;21838:9;21832:16;21857:38;21889:5;21857:38;:::i;:::-;21914:5;-1:-1:-1;21938:48:73;21982:2;21967:18;;21938:48;:::i;:::-;21928:58;;22005:48;22049:2;22038:9;22034:18;22005:48;:::i;:::-;21995:58;;21635:424;;;;;:::o;22452:954::-;22680:4;22709:3;22731:42;22812:2;22804:6;22800:15;22789:9;22782:34;22841:6;22835:13;22899:2;22894;22888:9;22884:18;22879:2;22868:9;22864:18;22857:46;22963:2;22957;22953;22949:11;22943:18;22939:27;22934:2;22923:9;22919:18;22912:55;23010:2;23006;23002:11;22996:18;23033:14;23101:2;23087:12;23083:21;23078:2;23067:9;23063:18;23056:49;23166:2;23160;23156;23152:11;23146:18;23142:27;23136:3;23125:9;23121:19;23114:56;;;;23235:2;23229;23221:6;23217:15;23211:22;23207:31;23201:3;23190:9;23186:19;23179:60;;23294:2;23286:6;23282:15;23276:22;23270:3;23259:9;23255:19;23248:51;23336:2;23330:3;23319:9;23315:19;23308:31;23356:44;23396:2;23385:9;23381:18;23373:6;23356:44;:::i;:::-;23348:52;22452:954;-1:-1:-1;;;;;;22452:954:73:o",
    "linkReferences": {},
    "immutableReferences": {
      "48979": [
        {
          "start": 124,
          "length": 32
        },
        {
          "start": 759,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "PERMIT2()": "6afdd850",
    "execute((bytes,bytes))": "3f62192e",
    "execute((bytes,bytes),address)": "e956bbdf",
    "multicall(bytes[])": "ac9650d8",
    "permit(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": "d339056d",
    "universalRouter()": "35a9e4df"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_universalRouter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DeadlineBeforeEndTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EndTimeBeforeStartTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmounts\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidReactor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsafeCast\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"filler\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Relay\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PERMIT2\",\"outputs\":[{\"internalType\":\"contract IPermit2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"order\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"internalType\":\"struct SignedOrder\",\"name\":\"signedOrder\",\"type\":\"tuple\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"order\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"internalType\":\"struct SignedOrder\",\"name\":\"signedOrder\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"universalRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Relay(bytes32,address,address,uint256)\":{\"params\":{\"filler\":\"The address which executed the fill\",\"nonce\":\"The nonce of the filled order\",\"orderHash\":\"The hash of the order that was filled\",\"swapper\":\"The swapper of the filled order\"}}},\"kind\":\"dev\",\"methods\":{\"execute((bytes,bytes),address)\":{\"details\":\"Batch execute is enabled by using multicall.\",\"params\":{\"feeRecipient\":\"The address to send the user's fee input.\",\"signedOrder\":\"Contains the raw relay order and signature bytes.\"}},\"multicall(bytes[])\":{\"params\":{\"data\":\"Encoded function data for each of the calls.\"},\"returns\":{\"results\":\"Return values from each of the calls.\"}},\"permit(address,address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Uses native 2612 permit if possible and falls back permit2 if not implemented on the token.A permit request can be combined with an execute action through multicall.\",\"params\":{\"amount\":\"The amount allowed.\",\"deadline\":\"The expiration for the signature.\",\"owner\":\"The signer of the permit.\",\"r\":\"Must produce valid secp256k1 signature from the owner along with v and s.\",\"s\":\"Must produce valid secp256k1 signature from the owner along with r and v.\",\"spender\":\"The approved spender.\",\"token\":\"The token to permit.\",\"v\":\"Must produce valid secp256k1 signature from the owner along with r and s.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"DeadlineBeforeEndTime()\":[{\"notice\":\"Thrown when an order's deadline is before its end time\"}],\"EndTimeBeforeStartTime()\":[{\"notice\":\"Thrown when an order's end time is before its start time\"}],\"InvalidAmounts()\":[{\"notice\":\"Thrown if the escalation direction is incorrect\"}],\"InvalidReactor()\":[{\"notice\":\"Thrown when the order targets a different reactor\"}],\"UnsafeCast()\":[{\"notice\":\"Thrown when a valude greater than type(uint160).max is cast to uint160\"}]},\"events\":{\"Relay(bytes32,address,address,uint256)\":{\"notice\":\"Emitted when an order is filled\"}},\"kind\":\"user\",\"methods\":{\"PERMIT2()\":{\"notice\":\"Permit2 address used for token transfers and signature verification\"},\"execute((bytes,bytes))\":{\"notice\":\"Shortcut for execute which sets the feeRecipient as msg.sender.\"},\"execute((bytes,bytes),address)\":{\"notice\":\"Validates a user's relayed request, sends tokens to relevant addresses, and executes the relayed universalRouterCalldata.\"},\"multicall(bytes[])\":{\"notice\":\"Call multiple functions in the current contract.\"},\"permit(address,address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Execute a signed 2612-style permit.\"},\"universalRouter()\":{\"notice\":\"Actions only execute on the universal router.\"}},\"notice\":\"Reactor for handling the execution of RelayOrdersThis contract MUST NOT have approvals or privileged accessany funds in this contract can be swept away by anyone\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/reactors/RelayOrderReactor.sol\":\"RelayOrderReactor\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":UniswapX/=lib/UniswapX/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/permit2/\",\":solmate/=lib/solmate/\"]},\"sources\":{\"lib/permit2/src/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x2009e741b6acf7b6cf0c42d508119b2bc346c5e5ff5bad04cfe2d8645db09eac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://520ce056d0bdba4c08a88dce46f0c6b5febe0049c0a15ae7ffb5b4d74e77d02a\",\"dweb:/ipfs/QmcBoVDYUApcaY9KkNSznmAGKZX2BJGHiDuXqAJtsLJz24\"]},\"lib/permit2/src/interfaces/IDAIPermit.sol\":{\"keccak256\":\"0xda8bc6826837c90ca2457a2111f5f0423672597931722adcdae236450dc7096e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db6d9b11308218f22b3c30805c9023b7d8d523f52bfdacf894e861da5fcec58e\",\"dweb:/ipfs/QmZHpKQL48iaC2xjwDTyU4jGy8RgrpWMqy6pB2objJwP6j\"]},\"lib/permit2/src/interfaces/IEIP712.sol\":{\"keccak256\":\"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72\",\"dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk\"]},\"lib/permit2/src/interfaces/IPermit2.sol\":{\"keccak256\":\"0xaa631cc9f53e699301d94233007110a345e6779011def484e8dd97b8fe0af771\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc0502cf19c9c18f320a3001201e89e350393b75837f6b7971de18b2de06f30d\",\"dweb:/ipfs/QmT9SfhdJ7VJNNrf94g4H5usyi7ShqWGx7Cqsz9jZTjX96\"]},\"lib/permit2/src/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0xe6df9966f8841dc3958ee86169c89de97e7f614c81c28b9dc947b12d732df64e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d4eafdee7f48c3be8350a94eb6edd0bfb2af2c105df65787a77174f356c0317\",\"dweb:/ipfs/QmY1j2adeeAhNpn6cUuthemxGCdLXHTfyMh9yTKsY4mZ2d\"]},\"lib/permit2/src/libraries/Permit2Lib.sol\":{\"keccak256\":\"0x0b20cdea7c0a388cd9c569736b8dcf57fbad1297027f30f45f533b74294cf77c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45ea3dcfbb37ba5c3c765384257050e4fc2629eb719f241f848cd45f29fbfe0b\",\"dweb:/ipfs/QmPyBn9TmcPtGCQkeJQntPKGDzaaoSdWsxKS2BXRe7n3vE\"]},\"lib/permit2/src/libraries/PermitHash.sol\":{\"keccak256\":\"0x54af80d9c3193934c6947c31f59b8f3d7918f83676fe92ed6136593ad591d478\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5264001770be2cdeb7651e4d22af7edbc4e16da6d38747efeb4f54b5472ca5c5\",\"dweb:/ipfs/QmPvwau7DXw6stGQ14hpyTeLdYDYrrrdMnUfkQTPpMXQxz\"]},\"lib/permit2/src/libraries/SafeCast160.sol\":{\"keccak256\":\"0x8a34e2beac108d74f89510c949983212b5f09307a93ee9e17a9d50e93f6bc8e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://828697f9567ce617c5c1c8f76b6bcd250e93aea2c4f3ee188be6dff8443c19e7\",\"dweb:/ipfs/QmafxeSPhUc9gGtNDLAw26oZooC5XNLhDMxHxYhJxL5Nwi\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9\",\"dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi\"]},\"src/base/Multicall.sol\":{\"keccak256\":\"0x3bc29d85022b7d7bfb81d4e0a6866098bd9514bb4556e6fe251c36c57bfbe5f8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ce4d223c00a4be6fa5367be53748a0ad73afd937c6b9bbd1fe3800a6a04d6113\",\"dweb:/ipfs/QmTfuftu3HUYC118ALdZbNar6SKBZE3GF4iTHLhs3QSnWy\"]},\"src/base/ReactorErrors.sol\":{\"keccak256\":\"0x487f799a07c549f34e1701f6e94bbdd14cfb010596aa4403e524935e23589075\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2326e7299b2fc600eadc4feae2c79ba76069a3658a80956875ba0430d7a11942\",\"dweb:/ipfs/Qme4Zz4MxfL5tjNuPxSV8cy3cTV5nnvP9dHwdCy232MCS1\"]},\"src/base/ReactorEvents.sol\":{\"keccak256\":\"0xddf0ee09205899af2bbfb8cb6dd6a5be7a431342d8dcd733be4d3fd30580867d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f365252d6714be81bd224072b0192e36c62adc637302c2ca0bf9f8e4b8f5880e\",\"dweb:/ipfs/QmYy4Nqq9zvBfG9mwM4bjCDZjsXYYcMVR8NNE421DUVs1u\"]},\"src/base/ReactorStructs.sol\":{\"keccak256\":\"0x18dc9ff435dec15d740e2e2ac4b44eeee1dbbf9f947246c7ae565fb4da3b0626\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0e4e7a381fa6b1f23b6e26ef0715b88f26390009183a7529ee836d324e1d5d98\",\"dweb:/ipfs/QmYtpitwNuPnNj13mDDSSJvWhyLz5YALj4pw6gGZN2EjWE\"]},\"src/interfaces/IMulticall.sol\":{\"keccak256\":\"0x2aa1fd5d6df4fd3ac2b69ddf085b350ad9ef32585e5b2391439e77c424a7ff1b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f3475a5bead81f3dd8bfb15ed76536a68654d06554335903239565f06a626152\",\"dweb:/ipfs/QmevZMWBPejcPjRU5KGBjh82dyTkfkgjTwvJfvxcwvYTFH\"]},\"src/interfaces/IRelayOrderReactor.sol\":{\"keccak256\":\"0xf44f592bdc74fcbf7d50851ca1f1eca13a799d0ece430d11d333df4af5d424a3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://07c6d298869f949c2c057de836d365f0fb1a101df4f699c4ff330cddea019f64\",\"dweb:/ipfs/QmWYbD2rT4gWM3SYwcyYm5vuVHRdgN9JZe4bHHiBLo8zHH\"]},\"src/lib/FeeEscalatorLib.sol\":{\"keccak256\":\"0x7f3ccd007c6ba29f003d4f2bea576920524e5305baace4feda586e170a57e082\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7b8e26057956dc0a298632b060d88893dd68c2c499d0fc17454582de8f793ded\",\"dweb:/ipfs/QmdzoN2QNVR7E52TvxNQnGsqMh3VDeUw3aecAbAVNWUjyN\"]},\"src/lib/InputLib.sol\":{\"keccak256\":\"0x530a84300a0c6066534d69a01904b88138fa880407f0687ef1a90beb7466b400\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ab702b8fcef738bb90abc166f4b195a4faaf74930dc2ab0f4bca24b3cb4df103\",\"dweb:/ipfs/QmWNbbfGr7sAe5Mga7pXQYusC2mSSAoDa86k5rPNZLtvdw\"]},\"src/lib/RelayOrderInfoLib.sol\":{\"keccak256\":\"0xb49d7a935ebd22ad329f3121fbf61bd29c1f18632bf64d4a303840bf3fdcc50c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c7977628a6262b91f891f8a8015c612217888e0a06f63ea1d6eb8c2e7cb0fb80\",\"dweb:/ipfs/QmdnaYQzoPxXh5hfL2jWT6ztoNKHPADmVoYwevTk511x5e\"]},\"src/lib/RelayOrderLib.sol\":{\"keccak256\":\"0xab0c4fd1488fb00a4ab008698f92a7ecf09410dce04d43bcd06ff25ed27c3a64\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://024216624a58001026bc16426733631bbfaf711be82ae003fe17ea7714d16c92\",\"dweb:/ipfs/QmVHaddETGHomh9G82oBKMMcFFN5QvAqou8RseweoaqZdz\"]},\"src/reactors/RelayOrderReactor.sol\":{\"keccak256\":\"0x699096db8c359d169e8f017037e093017593f5a91a035779e040a5c27106b963\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b5f50f241269e228d02024233d74dff152711ab888bd620c30107a43f6a2a5\",\"dweb:/ipfs/QmZEcWrUJdFky4zfNbqVRXHp9o9kYyvpM7A6Bw6nDKFTaa\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.24+commit.e11b9ed9"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_universalRouter",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DeadlineBeforeEndTime"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EndTimeBeforeStartTime"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidAmounts"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidReactor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnsafeCast"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "filler",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "swapper",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Relay",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "PERMIT2",
          "outputs": [
            {
              "internalType": "contract IPermit2",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct SignedOrder",
              "name": "signedOrder",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "order",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execute"
        },
        {
          "inputs": [
            {
              "internalType": "struct SignedOrder",
              "name": "signedOrder",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "order",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "feeRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execute"
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "permit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "universalRouter",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "execute((bytes,bytes),address)": {
            "details": "Batch execute is enabled by using multicall.",
            "params": {
              "feeRecipient": "The address to send the user's fee input.",
              "signedOrder": "Contains the raw relay order and signature bytes."
            }
          },
          "multicall(bytes[])": {
            "params": {
              "data": "Encoded function data for each of the calls."
            },
            "returns": {
              "results": "Return values from each of the calls."
            }
          },
          "permit(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "Uses native 2612 permit if possible and falls back permit2 if not implemented on the token.A permit request can be combined with an execute action through multicall.",
            "params": {
              "amount": "The amount allowed.",
              "deadline": "The expiration for the signature.",
              "owner": "The signer of the permit.",
              "r": "Must produce valid secp256k1 signature from the owner along with v and s.",
              "s": "Must produce valid secp256k1 signature from the owner along with r and v.",
              "spender": "The approved spender.",
              "token": "The token to permit.",
              "v": "Must produce valid secp256k1 signature from the owner along with r and s."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "PERMIT2()": {
            "notice": "Permit2 address used for token transfers and signature verification"
          },
          "execute((bytes,bytes))": {
            "notice": "Shortcut for execute which sets the feeRecipient as msg.sender."
          },
          "execute((bytes,bytes),address)": {
            "notice": "Validates a user's relayed request, sends tokens to relevant addresses, and executes the relayed universalRouterCalldata."
          },
          "multicall(bytes[])": {
            "notice": "Call multiple functions in the current contract."
          },
          "permit(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "notice": "Execute a signed 2612-style permit."
          },
          "universalRouter()": {
            "notice": "Actions only execute on the universal router."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "UniswapX/=lib/UniswapX/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-gas-snapshot/=lib/forge-gas-snapshot/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "permit2/=lib/permit2/",
        "solmate/=lib/solmate/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/reactors/RelayOrderReactor.sol": "RelayOrderReactor"
      },
      "evmVersion": "paris",
      "libraries": {}
    },
    "sources": {
      "lib/permit2/src/interfaces/IAllowanceTransfer.sol": {
        "keccak256": "0x2009e741b6acf7b6cf0c42d508119b2bc346c5e5ff5bad04cfe2d8645db09eac",
        "urls": [
          "bzz-raw://520ce056d0bdba4c08a88dce46f0c6b5febe0049c0a15ae7ffb5b4d74e77d02a",
          "dweb:/ipfs/QmcBoVDYUApcaY9KkNSznmAGKZX2BJGHiDuXqAJtsLJz24"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IDAIPermit.sol": {
        "keccak256": "0xda8bc6826837c90ca2457a2111f5f0423672597931722adcdae236450dc7096e",
        "urls": [
          "bzz-raw://db6d9b11308218f22b3c30805c9023b7d8d523f52bfdacf894e861da5fcec58e",
          "dweb:/ipfs/QmZHpKQL48iaC2xjwDTyU4jGy8RgrpWMqy6pB2objJwP6j"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IEIP712.sol": {
        "keccak256": "0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138",
        "urls": [
          "bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72",
          "dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IPermit2.sol": {
        "keccak256": "0xaa631cc9f53e699301d94233007110a345e6779011def484e8dd97b8fe0af771",
        "urls": [
          "bzz-raw://fc0502cf19c9c18f320a3001201e89e350393b75837f6b7971de18b2de06f30d",
          "dweb:/ipfs/QmT9SfhdJ7VJNNrf94g4H5usyi7ShqWGx7Cqsz9jZTjX96"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/ISignatureTransfer.sol": {
        "keccak256": "0xe6df9966f8841dc3958ee86169c89de97e7f614c81c28b9dc947b12d732df64e",
        "urls": [
          "bzz-raw://3d4eafdee7f48c3be8350a94eb6edd0bfb2af2c105df65787a77174f356c0317",
          "dweb:/ipfs/QmY1j2adeeAhNpn6cUuthemxGCdLXHTfyMh9yTKsY4mZ2d"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/libraries/Permit2Lib.sol": {
        "keccak256": "0x0b20cdea7c0a388cd9c569736b8dcf57fbad1297027f30f45f533b74294cf77c",
        "urls": [
          "bzz-raw://45ea3dcfbb37ba5c3c765384257050e4fc2629eb719f241f848cd45f29fbfe0b",
          "dweb:/ipfs/QmPyBn9TmcPtGCQkeJQntPKGDzaaoSdWsxKS2BXRe7n3vE"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/libraries/PermitHash.sol": {
        "keccak256": "0x54af80d9c3193934c6947c31f59b8f3d7918f83676fe92ed6136593ad591d478",
        "urls": [
          "bzz-raw://5264001770be2cdeb7651e4d22af7edbc4e16da6d38747efeb4f54b5472ca5c5",
          "dweb:/ipfs/QmPvwau7DXw6stGQ14hpyTeLdYDYrrrdMnUfkQTPpMXQxz"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/libraries/SafeCast160.sol": {
        "keccak256": "0x8a34e2beac108d74f89510c949983212b5f09307a93ee9e17a9d50e93f6bc8e9",
        "urls": [
          "bzz-raw://828697f9567ce617c5c1c8f76b6bcd250e93aea2c4f3ee188be6dff8443c19e7",
          "dweb:/ipfs/QmafxeSPhUc9gGtNDLAw26oZooC5XNLhDMxHxYhJxL5Nwi"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843",
        "urls": [
          "bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9",
          "dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/base/Multicall.sol": {
        "keccak256": "0x3bc29d85022b7d7bfb81d4e0a6866098bd9514bb4556e6fe251c36c57bfbe5f8",
        "urls": [
          "bzz-raw://ce4d223c00a4be6fa5367be53748a0ad73afd937c6b9bbd1fe3800a6a04d6113",
          "dweb:/ipfs/QmTfuftu3HUYC118ALdZbNar6SKBZE3GF4iTHLhs3QSnWy"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/base/ReactorErrors.sol": {
        "keccak256": "0x487f799a07c549f34e1701f6e94bbdd14cfb010596aa4403e524935e23589075",
        "urls": [
          "bzz-raw://2326e7299b2fc600eadc4feae2c79ba76069a3658a80956875ba0430d7a11942",
          "dweb:/ipfs/Qme4Zz4MxfL5tjNuPxSV8cy3cTV5nnvP9dHwdCy232MCS1"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/base/ReactorEvents.sol": {
        "keccak256": "0xddf0ee09205899af2bbfb8cb6dd6a5be7a431342d8dcd733be4d3fd30580867d",
        "urls": [
          "bzz-raw://f365252d6714be81bd224072b0192e36c62adc637302c2ca0bf9f8e4b8f5880e",
          "dweb:/ipfs/QmYy4Nqq9zvBfG9mwM4bjCDZjsXYYcMVR8NNE421DUVs1u"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/base/ReactorStructs.sol": {
        "keccak256": "0x18dc9ff435dec15d740e2e2ac4b44eeee1dbbf9f947246c7ae565fb4da3b0626",
        "urls": [
          "bzz-raw://0e4e7a381fa6b1f23b6e26ef0715b88f26390009183a7529ee836d324e1d5d98",
          "dweb:/ipfs/QmYtpitwNuPnNj13mDDSSJvWhyLz5YALj4pw6gGZN2EjWE"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IMulticall.sol": {
        "keccak256": "0x2aa1fd5d6df4fd3ac2b69ddf085b350ad9ef32585e5b2391439e77c424a7ff1b",
        "urls": [
          "bzz-raw://f3475a5bead81f3dd8bfb15ed76536a68654d06554335903239565f06a626152",
          "dweb:/ipfs/QmevZMWBPejcPjRU5KGBjh82dyTkfkgjTwvJfvxcwvYTFH"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IRelayOrderReactor.sol": {
        "keccak256": "0xf44f592bdc74fcbf7d50851ca1f1eca13a799d0ece430d11d333df4af5d424a3",
        "urls": [
          "bzz-raw://07c6d298869f949c2c057de836d365f0fb1a101df4f699c4ff330cddea019f64",
          "dweb:/ipfs/QmWYbD2rT4gWM3SYwcyYm5vuVHRdgN9JZe4bHHiBLo8zHH"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/FeeEscalatorLib.sol": {
        "keccak256": "0x7f3ccd007c6ba29f003d4f2bea576920524e5305baace4feda586e170a57e082",
        "urls": [
          "bzz-raw://7b8e26057956dc0a298632b060d88893dd68c2c499d0fc17454582de8f793ded",
          "dweb:/ipfs/QmdzoN2QNVR7E52TvxNQnGsqMh3VDeUw3aecAbAVNWUjyN"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/InputLib.sol": {
        "keccak256": "0x530a84300a0c6066534d69a01904b88138fa880407f0687ef1a90beb7466b400",
        "urls": [
          "bzz-raw://ab702b8fcef738bb90abc166f4b195a4faaf74930dc2ab0f4bca24b3cb4df103",
          "dweb:/ipfs/QmWNbbfGr7sAe5Mga7pXQYusC2mSSAoDa86k5rPNZLtvdw"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/RelayOrderInfoLib.sol": {
        "keccak256": "0xb49d7a935ebd22ad329f3121fbf61bd29c1f18632bf64d4a303840bf3fdcc50c",
        "urls": [
          "bzz-raw://c7977628a6262b91f891f8a8015c612217888e0a06f63ea1d6eb8c2e7cb0fb80",
          "dweb:/ipfs/QmdnaYQzoPxXh5hfL2jWT6ztoNKHPADmVoYwevTk511x5e"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/RelayOrderLib.sol": {
        "keccak256": "0xab0c4fd1488fb00a4ab008698f92a7ecf09410dce04d43bcd06ff25ed27c3a64",
        "urls": [
          "bzz-raw://024216624a58001026bc16426733631bbfaf711be82ae003fe17ea7714d16c92",
          "dweb:/ipfs/QmVHaddETGHomh9G82oBKMMcFFN5QvAqou8RseweoaqZdz"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/reactors/RelayOrderReactor.sol": {
        "keccak256": "0x699096db8c359d169e8f017037e093017593f5a91a035779e040a5c27106b963",
        "urls": [
          "bzz-raw://d0b5f50f241269e228d02024233d74dff152711ab888bd620c30107a43f6a2a5",
          "dweb:/ipfs/QmZEcWrUJdFky4zfNbqVRXHp9o9kYyvpM7A6Bw6nDKFTaa"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/reactors/RelayOrderReactor.sol",
    "id": 49115,
    "exportedSymbols": {
      "ERC20": [
        47830
      ],
      "IPermit2": [
        46282
      ],
      "IRelayOrderReactor": [
        48336
      ],
      "Multicall": [
        48193
      ],
      "Permit2Lib": [
        46667
      ],
      "ReactorErrors": [
        48208
      ],
      "ReactorEvents": [
        48223
      ],
      "RelayOrder": [
        48238
      ],
      "RelayOrderLib": [
        48931
      ],
      "RelayOrderReactor": [
        49114
      ],
      "SignedOrder": [
        48274
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:2653:53",
    "nodes": [
      {
        "id": 48933,
        "nodeType": "PragmaDirective",
        "src": "45:23:53",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".24"
        ]
      },
      {
        "id": 48935,
        "nodeType": "ImportDirective",
        "src": "70:61:53",
        "nodes": [],
        "absolutePath": "lib/permit2/src/interfaces/IPermit2.sol",
        "file": "permit2/src/interfaces/IPermit2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49115,
        "sourceUnit": 46283,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48934,
              "name": "IPermit2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46282,
              "src": "78:8:53",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48937,
        "nodeType": "ImportDirective",
        "src": "132:64:53",
        "nodes": [],
        "absolutePath": "lib/permit2/src/libraries/Permit2Lib.sol",
        "file": "permit2/src/libraries/Permit2Lib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49115,
        "sourceUnit": 46668,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48936,
              "name": "Permit2Lib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46667,
              "src": "140:10:53",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48939,
        "nodeType": "ImportDirective",
        "src": "197:72:53",
        "nodes": [],
        "absolutePath": "src/interfaces/IRelayOrderReactor.sol",
        "file": "../interfaces/IRelayOrderReactor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49115,
        "sourceUnit": 48337,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48938,
              "name": "IRelayOrderReactor",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48336,
              "src": "205:18:53",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48942,
        "nodeType": "ImportDirective",
        "src": "270:67:53",
        "nodes": [],
        "absolutePath": "src/base/ReactorStructs.sol",
        "file": "../base/ReactorStructs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49115,
        "sourceUnit": 48275,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48940,
              "name": "RelayOrder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48238,
              "src": "278:10:53",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 48941,
              "name": "SignedOrder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48274,
              "src": "290:11:53",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48944,
        "nodeType": "ImportDirective",
        "src": "338:56:53",
        "nodes": [],
        "absolutePath": "src/base/ReactorErrors.sol",
        "file": "../base/ReactorErrors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49115,
        "sourceUnit": 48209,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48943,
              "name": "ReactorErrors",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48208,
              "src": "346:13:53",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48946,
        "nodeType": "ImportDirective",
        "src": "395:48:53",
        "nodes": [],
        "absolutePath": "src/base/Multicall.sol",
        "file": "../base/Multicall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49115,
        "sourceUnit": 48194,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48945,
              "name": "Multicall",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48193,
              "src": "403:9:53",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48948,
        "nodeType": "ImportDirective",
        "src": "444:55:53",
        "nodes": [],
        "absolutePath": "src/lib/RelayOrderLib.sol",
        "file": "../lib/RelayOrderLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49115,
        "sourceUnit": 48932,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48947,
              "name": "RelayOrderLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48931,
              "src": "452:13:53",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48950,
        "nodeType": "ImportDirective",
        "src": "500:51:53",
        "nodes": [],
        "absolutePath": "lib/solmate/src/tokens/ERC20.sol",
        "file": "solmate/src/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49115,
        "sourceUnit": 47831,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48949,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47830,
              "src": "508:5:53",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48952,
        "nodeType": "ImportDirective",
        "src": "552:56:53",
        "nodes": [],
        "absolutePath": "src/base/ReactorEvents.sol",
        "file": "../base/ReactorEvents.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49115,
        "sourceUnit": 48224,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48951,
              "name": "ReactorEvents",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48223,
              "src": "560:13:53",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49114,
        "nodeType": "ContractDefinition",
        "src": "810:1887:53",
        "nodes": [
          {
            "id": 48965,
            "nodeType": "UsingForDirective",
            "src": "906:35:53",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 48962,
              "name": "RelayOrderLib",
              "nameLocations": [
                "912:13:53"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 48931,
              "src": "912:13:53"
            },
            "typeName": {
              "id": 48964,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 48963,
                "name": "RelayOrder",
                "nameLocations": [
                  "930:10:53"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 48238,
                "src": "930:10:53"
              },
              "referencedDeclaration": 48238,
              "src": "930:10:53",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_RelayOrder_$48238_storage_ptr",
                "typeString": "struct RelayOrder"
              }
            }
          },
          {
            "id": 48969,
            "nodeType": "UsingForDirective",
            "src": "946:27:53",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 48966,
              "name": "Permit2Lib",
              "nameLocations": [
                "952:10:53"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46667,
              "src": "952:10:53"
            },
            "typeName": {
              "id": 48968,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 48967,
                "name": "ERC20",
                "nameLocations": [
                  "967:5:53"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 47830,
                "src": "967:5:53"
              },
              "referencedDeclaration": 47830,
              "src": "967:5:53",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$47830",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "id": 48976,
            "nodeType": "VariableDeclaration",
            "src": "1063:87:53",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 48970,
              "nodeType": "StructuredDocumentation",
              "src": "979:79:53",
              "text": "@notice Permit2 address used for token transfers and signature verification"
            },
            "functionSelector": "6afdd850",
            "mutability": "constant",
            "name": "PERMIT2",
            "nameLocation": "1088:7:53",
            "scope": 49114,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IPermit2_$46282",
              "typeString": "contract IPermit2"
            },
            "typeName": {
              "id": 48972,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 48971,
                "name": "IPermit2",
                "nameLocations": [
                  "1063:8:53"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 46282,
                "src": "1063:8:53"
              },
              "referencedDeclaration": 46282,
              "src": "1063:8:53",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPermit2_$46282",
                "typeString": "contract IPermit2"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303030323244343733303330463131366444454539463642343361433738424133",
                  "id": 48974,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1107:42:53",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x000000000022D473030F116dDEE9F6B43aC78BA3"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 48973,
                "name": "IPermit2",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 46282,
                "src": "1098:8:53",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IPermit2_$46282_$",
                  "typeString": "type(contract IPermit2)"
                }
              },
              "id": 48975,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1098:52:53",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPermit2_$46282",
                "typeString": "contract IPermit2"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48979,
            "nodeType": "VariableDeclaration",
            "src": "1218:40:53",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 48977,
              "nodeType": "StructuredDocumentation",
              "src": "1156:57:53",
              "text": "@notice Actions only execute on the universal router."
            },
            "functionSelector": "35a9e4df",
            "mutability": "immutable",
            "name": "universalRouter",
            "nameLocation": "1243:15:53",
            "scope": 49114,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 48978,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1218:7:53",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48989,
            "nodeType": "FunctionDefinition",
            "src": "1265:89:53",
            "nodes": [],
            "body": {
              "id": 48988,
              "nodeType": "Block",
              "src": "1303:51:53",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 48986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48984,
                      "name": "universalRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48979,
                      "src": "1313:15:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 48985,
                      "name": "_universalRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48981,
                      "src": "1331:16:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1313:34:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 48987,
                  "nodeType": "ExpressionStatement",
                  "src": "1313:34:53"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 48982,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48981,
                  "mutability": "mutable",
                  "name": "_universalRouter",
                  "nameLocation": "1285:16:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 48989,
                  "src": "1277:24:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48980,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1277:7:53",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1276:26:53"
            },
            "returnParameters": {
              "id": 48983,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1303:0:53"
            },
            "scope": 49114,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 49065,
            "nodeType": "FunctionDefinition",
            "src": "1399:821:53",
            "nodes": [],
            "body": {
              "id": 49064,
              "nodeType": "Block",
              "src": "1479:741:53",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    49000
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49000,
                      "mutability": "mutable",
                      "name": "order",
                      "nameLocation": "1508:5:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 49064,
                      "src": "1490:23:53",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RelayOrder_$48238_memory_ptr",
                        "typeString": "struct RelayOrder"
                      },
                      "typeName": {
                        "id": 48999,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48998,
                          "name": "RelayOrder",
                          "nameLocations": [
                            "1490:10:53"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 48238,
                          "src": "1490:10:53"
                        },
                        "referencedDeclaration": 48238,
                        "src": "1490:10:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RelayOrder_$48238_storage_ptr",
                          "typeString": "struct RelayOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49008,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 49003,
                          "name": "signedOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48993,
                          "src": "1528:11:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SignedOrder_$48274_calldata_ptr",
                            "typeString": "struct SignedOrder calldata"
                          }
                        },
                        "id": 49004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1540:5:53",
                        "memberName": "order",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48271,
                        "src": "1528:17:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 49005,
                            "name": "RelayOrder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48238,
                            "src": "1548:10:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_RelayOrder_$48238_storage_ptr_$",
                              "typeString": "type(struct RelayOrder storage pointer)"
                            }
                          }
                        ],
                        "id": 49006,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1547:12:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_RelayOrder_$48238_storage_ptr_$",
                          "typeString": "type(struct RelayOrder storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_RelayOrder_$48238_storage_ptr_$",
                          "typeString": "type(struct RelayOrder storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 49001,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1517:3:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 49002,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1521:6:53",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1517:10:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 49007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1517:43:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RelayOrder_$48238_memory_ptr",
                      "typeString": "struct RelayOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1489:71:53"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 49009,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49000,
                        "src": "1570:5:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RelayOrder_$48238_memory_ptr",
                          "typeString": "struct RelayOrder memory"
                        }
                      },
                      "id": 49011,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1576:8:53",
                      "memberName": "validate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48745,
                      "src": "1570:14:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_RelayOrder_$48238_memory_ptr_$returns$__$attached_to$_t_struct$_RelayOrder_$48238_memory_ptr_$",
                        "typeString": "function (struct RelayOrder memory) view"
                      }
                    },
                    "id": 49012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1570:16:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49013,
                  "nodeType": "ExpressionStatement",
                  "src": "1570:16:53"
                },
                {
                  "assignments": [
                    49015
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49015,
                      "mutability": "mutable",
                      "name": "orderHash",
                      "nameLocation": "1605:9:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 49064,
                      "src": "1597:17:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 49014,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1597:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49019,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 49016,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49000,
                        "src": "1617:5:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RelayOrder_$48238_memory_ptr",
                          "typeString": "struct RelayOrder memory"
                        }
                      },
                      "id": 49017,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1623:4:53",
                      "memberName": "hash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48930,
                      "src": "1617:10:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_RelayOrder_$48238_memory_ptr_$returns$_t_bytes32_$attached_to$_t_struct$_RelayOrder_$48238_memory_ptr_$",
                        "typeString": "function (struct RelayOrder memory) pure returns (bytes32)"
                      }
                    },
                    "id": 49018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1617:12:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1597:32:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 49023,
                        "name": "orderHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49015,
                        "src": "1665:9:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 49024,
                        "name": "PERMIT2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48976,
                        "src": "1676:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPermit2_$46282",
                          "typeString": "contract IPermit2"
                        }
                      },
                      {
                        "id": 49025,
                        "name": "feeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48995,
                        "src": "1685:12:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 49026,
                          "name": "signedOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48993,
                          "src": "1699:11:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SignedOrder_$48274_calldata_ptr",
                            "typeString": "struct SignedOrder calldata"
                          }
                        },
                        "id": 49027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1711:3:53",
                        "memberName": "sig",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48273,
                        "src": "1699:15:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_contract$_IPermit2_$46282",
                          "typeString": "contract IPermit2"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 49020,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49000,
                        "src": "1639:5:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RelayOrder_$48238_memory_ptr",
                          "typeString": "struct RelayOrder memory"
                        }
                      },
                      "id": 49022,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1645:19:53",
                      "memberName": "transferInputTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48897,
                      "src": "1639:25:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_RelayOrder_$48238_memory_ptr_$_t_bytes32_$_t_contract$_IPermit2_$46282_$_t_address_$_t_bytes_calldata_ptr_$returns$__$attached_to$_t_struct$_RelayOrder_$48238_memory_ptr_$",
                        "typeString": "function (struct RelayOrder memory,bytes32,contract IPermit2,address,bytes calldata)"
                      }
                    },
                    "id": 49028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1639:76:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49029,
                  "nodeType": "ExpressionStatement",
                  "src": "1639:76:53"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 49034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "id": 49030,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49000,
                          "src": "1730:5:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RelayOrder_$48238_memory_ptr",
                            "typeString": "struct RelayOrder memory"
                          }
                        },
                        "id": 49031,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1736:23:53",
                        "memberName": "universalRouterCalldata",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48237,
                        "src": "1730:29:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 49032,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1760:6:53",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1730:36:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 49033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1769:1:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1730:40:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49051,
                  "nodeType": "IfStatement",
                  "src": "1726:406:53",
                  "trueBody": {
                    "id": 49050,
                    "nodeType": "Block",
                    "src": "1772:360:53",
                    "statements": [
                      {
                        "assignments": [
                          49036,
                          49038
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 49036,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "1792:7:53",
                            "nodeType": "VariableDeclaration",
                            "scope": 49050,
                            "src": "1787:12:53",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 49035,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1787:4:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 49038,
                            "mutability": "mutable",
                            "name": "result",
                            "nameLocation": "1814:6:53",
                            "nodeType": "VariableDeclaration",
                            "scope": 49050,
                            "src": "1801:19:53",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 49037,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1801:5:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 49044,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 49041,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49000,
                                "src": "1845:5:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RelayOrder_$48238_memory_ptr",
                                  "typeString": "struct RelayOrder memory"
                                }
                              },
                              "id": 49042,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1851:23:53",
                              "memberName": "universalRouterCalldata",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 48237,
                              "src": "1845:29:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 49039,
                              "name": "universalRouter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48979,
                              "src": "1824:15:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 49040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1840:4:53",
                            "memberName": "call",
                            "nodeType": "MemberAccess",
                            "src": "1824:20:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 49043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1824:51:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1786:89:53"
                      },
                      {
                        "condition": {
                          "id": 49046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1893:8:53",
                          "subExpression": {
                            "id": 49045,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49036,
                            "src": "1894:7:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 49049,
                        "nodeType": "IfStatement",
                        "src": "1889:233:53",
                        "trueBody": {
                          "id": 49048,
                          "nodeType": "Block",
                          "src": "1903:219:53",
                          "statements": [
                            {
                              "AST": {
                                "nativeSrc": "2028:80:53",
                                "nodeType": "YulBlock",
                                "src": "2028:80:53",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "result",
                                              "nativeSrc": "2061:6:53",
                                              "nodeType": "YulIdentifier",
                                              "src": "2061:6:53"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "2069:4:53",
                                              "nodeType": "YulLiteral",
                                              "src": "2069:4:53",
                                              "type": "",
                                              "value": "0x20"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nativeSrc": "2057:3:53",
                                            "nodeType": "YulIdentifier",
                                            "src": "2057:3:53"
                                          },
                                          "nativeSrc": "2057:17:53",
                                          "nodeType": "YulFunctionCall",
                                          "src": "2057:17:53"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "result",
                                              "nativeSrc": "2082:6:53",
                                              "nodeType": "YulIdentifier",
                                              "src": "2082:6:53"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nativeSrc": "2076:5:53",
                                            "nodeType": "YulIdentifier",
                                            "src": "2076:5:53"
                                          },
                                          "nativeSrc": "2076:13:53",
                                          "nodeType": "YulFunctionCall",
                                          "src": "2076:13:53"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "2050:6:53",
                                        "nodeType": "YulIdentifier",
                                        "src": "2050:6:53"
                                      },
                                      "nativeSrc": "2050:40:53",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2050:40:53"
                                    },
                                    "nativeSrc": "2050:40:53",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2050:40:53"
                                  }
                                ]
                              },
                              "evmVersion": "paris",
                              "externalReferences": [
                                {
                                  "declaration": 49038,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "2061:6:53",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 49038,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "2082:6:53",
                                  "valueSize": 1
                                }
                              ],
                              "id": 49047,
                              "nodeType": "InlineAssembly",
                              "src": "2019:89:53"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 49053,
                        "name": "orderHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49015,
                        "src": "2153:9:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 49054,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2164:3:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 49055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2168:6:53",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2164:10:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 49056,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49000,
                            "src": "2176:5:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RelayOrder_$48238_memory_ptr",
                              "typeString": "struct RelayOrder memory"
                            }
                          },
                          "id": 49057,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2182:4:53",
                          "memberName": "info",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48229,
                          "src": "2176:10:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RelayOrderInfo_$48248_memory_ptr",
                            "typeString": "struct RelayOrderInfo memory"
                          }
                        },
                        "id": 49058,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2187:7:53",
                        "memberName": "swapper",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48243,
                        "src": "2176:18:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 49059,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49000,
                            "src": "2196:5:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RelayOrder_$48238_memory_ptr",
                              "typeString": "struct RelayOrder memory"
                            }
                          },
                          "id": 49060,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2202:4:53",
                          "memberName": "info",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48229,
                          "src": "2196:10:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RelayOrderInfo_$48248_memory_ptr",
                            "typeString": "struct RelayOrderInfo memory"
                          }
                        },
                        "id": 49061,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2207:5:53",
                        "memberName": "nonce",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48245,
                        "src": "2196:16:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 49052,
                      "name": "Relay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48222,
                      "src": "2147:5:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,address,address,uint256)"
                      }
                    },
                    "id": 49062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2147:66:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49063,
                  "nodeType": "EmitStatement",
                  "src": "2142:71:53"
                }
              ]
            },
            "baseFunctions": [
              48307
            ],
            "documentation": {
              "id": 48990,
              "nodeType": "StructuredDocumentation",
              "src": "1360:34:53",
              "text": "@inheritdoc IRelayOrderReactor"
            },
            "functionSelector": "e956bbdf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "execute",
            "nameLocation": "1408:7:53",
            "parameters": {
              "id": 48996,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48993,
                  "mutability": "mutable",
                  "name": "signedOrder",
                  "nameLocation": "1437:11:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 49065,
                  "src": "1416:32:53",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SignedOrder_$48274_calldata_ptr",
                    "typeString": "struct SignedOrder"
                  },
                  "typeName": {
                    "id": 48992,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 48991,
                      "name": "SignedOrder",
                      "nameLocations": [
                        "1416:11:53"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48274,
                      "src": "1416:11:53"
                    },
                    "referencedDeclaration": 48274,
                    "src": "1416:11:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SignedOrder_$48274_storage_ptr",
                      "typeString": "struct SignedOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48995,
                  "mutability": "mutable",
                  "name": "feeRecipient",
                  "nameLocation": "1458:12:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 49065,
                  "src": "1450:20:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48994,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1450:7:53",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1415:56:53"
            },
            "returnParameters": {
              "id": 48997,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1479:0:53"
            },
            "scope": 49114,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 49079,
            "nodeType": "FunctionDefinition",
            "src": "2265:107:53",
            "nodes": [],
            "body": {
              "id": 49078,
              "nodeType": "Block",
              "src": "2323:49:53",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 49073,
                        "name": "signedOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49069,
                        "src": "2341:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SignedOrder_$48274_calldata_ptr",
                          "typeString": "struct SignedOrder calldata"
                        }
                      },
                      {
                        "expression": {
                          "id": 49074,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2354:3:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 49075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2358:6:53",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2354:10:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SignedOrder_$48274_calldata_ptr",
                          "typeString": "struct SignedOrder calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 49072,
                      "name": "execute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        49065,
                        49079
                      ],
                      "referencedDeclaration": 49065,
                      "src": "2333:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SignedOrder_$48274_calldata_ptr_$_t_address_$returns$__$",
                        "typeString": "function (struct SignedOrder calldata,address)"
                      }
                    },
                    "id": 49076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2333:32:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49077,
                  "nodeType": "ExpressionStatement",
                  "src": "2333:32:53"
                }
              ]
            },
            "baseFunctions": [
              48314
            ],
            "documentation": {
              "id": 49066,
              "nodeType": "StructuredDocumentation",
              "src": "2226:34:53",
              "text": "@inheritdoc IRelayOrderReactor"
            },
            "functionSelector": "3f62192e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "execute",
            "nameLocation": "2274:7:53",
            "parameters": {
              "id": 49070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49069,
                  "mutability": "mutable",
                  "name": "signedOrder",
                  "nameLocation": "2303:11:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 49079,
                  "src": "2282:32:53",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SignedOrder_$48274_calldata_ptr",
                    "typeString": "struct SignedOrder"
                  },
                  "typeName": {
                    "id": 49068,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 49067,
                      "name": "SignedOrder",
                      "nameLocations": [
                        "2282:11:53"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48274,
                      "src": "2282:11:53"
                    },
                    "referencedDeclaration": 48274,
                    "src": "2282:11:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SignedOrder_$48274_storage_ptr",
                      "typeString": "struct SignedOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2281:34:53"
            },
            "returnParameters": {
              "id": 49071,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2323:0:53"
            },
            "scope": 49114,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 49113,
            "nodeType": "FunctionDefinition",
            "src": "2417:278:53",
            "nodes": [],
            "body": {
              "id": 49112,
              "nodeType": "Block",
              "src": "2622:73:53",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 49103,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49085,
                        "src": "2646:5:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49104,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49087,
                        "src": "2653:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49105,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49089,
                        "src": "2662:6:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 49106,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49091,
                        "src": "2670:8:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 49107,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49093,
                        "src": "2680:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 49108,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49095,
                        "src": "2683:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 49109,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49097,
                        "src": "2686:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 49100,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49083,
                        "src": "2632:5:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$47830",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 49102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2638:7:53",
                      "memberName": "permit2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46595,
                      "src": "2632:13:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$47830_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$attached_to$_t_contract$_ERC20_$47830_$",
                        "typeString": "function (contract ERC20,address,address,uint256,uint256,uint8,bytes32,bytes32)"
                      }
                    },
                    "id": 49110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2632:56:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49111,
                  "nodeType": "ExpressionStatement",
                  "src": "2632:56:53"
                }
              ]
            },
            "baseFunctions": [
              48335
            ],
            "documentation": {
              "id": 49080,
              "nodeType": "StructuredDocumentation",
              "src": "2378:34:53",
              "text": "@inheritdoc IRelayOrderReactor"
            },
            "functionSelector": "d339056d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "permit",
            "nameLocation": "2426:6:53",
            "parameters": {
              "id": 49098,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49083,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2448:5:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 49113,
                  "src": "2442:11:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$47830",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 49082,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 49081,
                      "name": "ERC20",
                      "nameLocations": [
                        "2442:5:53"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 47830,
                      "src": "2442:5:53"
                    },
                    "referencedDeclaration": 47830,
                    "src": "2442:5:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$47830",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49085,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "2471:5:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 49113,
                  "src": "2463:13:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49084,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2463:7:53",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49087,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "2494:7:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 49113,
                  "src": "2486:15:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49086,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2486:7:53",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49089,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2519:6:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 49113,
                  "src": "2511:14:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49088,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2511:7:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49091,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "2543:8:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 49113,
                  "src": "2535:16:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49090,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2535:7:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49093,
                  "mutability": "mutable",
                  "name": "v",
                  "nameLocation": "2567:1:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 49113,
                  "src": "2561:7:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 49092,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2561:5:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49095,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "2586:1:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 49113,
                  "src": "2578:9:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 49094,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2578:7:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49097,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "2605:1:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 49113,
                  "src": "2597:9:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 49096,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2597:7:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2432:180:53"
            },
            "returnParameters": {
              "id": 49099,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2622:0:53"
            },
            "scope": 49114,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 48954,
              "name": "Multicall",
              "nameLocations": [
                "840:9:53"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 48193,
              "src": "840:9:53"
            },
            "id": 48955,
            "nodeType": "InheritanceSpecifier",
            "src": "840:9:53"
          },
          {
            "baseName": {
              "id": 48956,
              "name": "ReactorEvents",
              "nameLocations": [
                "851:13:53"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 48223,
              "src": "851:13:53"
            },
            "id": 48957,
            "nodeType": "InheritanceSpecifier",
            "src": "851:13:53"
          },
          {
            "baseName": {
              "id": 48958,
              "name": "ReactorErrors",
              "nameLocations": [
                "866:13:53"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 48208,
              "src": "866:13:53"
            },
            "id": 48959,
            "nodeType": "InheritanceSpecifier",
            "src": "866:13:53"
          },
          {
            "baseName": {
              "id": 48960,
              "name": "IRelayOrderReactor",
              "nameLocations": [
                "881:18:53"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 48336,
              "src": "881:18:53"
            },
            "id": 48961,
            "nodeType": "InheritanceSpecifier",
            "src": "881:18:53"
          }
        ],
        "canonicalName": "RelayOrderReactor",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 48953,
          "nodeType": "StructuredDocumentation",
          "src": "610:200:53",
          "text": "@notice Reactor for handling the execution of RelayOrders\n @notice This contract MUST NOT have approvals or privileged access\n @notice any funds in this contract can be swept away by anyone"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          49114,
          48336,
          48208,
          48223,
          48193,
          48287
        ],
        "name": "RelayOrderReactor",
        "nameLocation": "819:17:53",
        "scope": 49115,
        "usedErrors": [
          47072,
          48198,
          48201,
          48204,
          48207
        ],
        "usedEvents": [
          48222
        ]
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 53
}